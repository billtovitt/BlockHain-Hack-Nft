//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tedeschi.NFT.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tedeschi.NFT.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection created successfully!!!.
        /// </summary>
        internal static string COLLECTION_CREATED_SUCCESSFULLY {
            get {
                return ResourceManager.GetString("COLLECTION_CREATED_SUCCESSFULLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This process will change the ENTIRE Image base URI from the previous metadata. This is useful when you don&apos;t have access to this kind of information before generating and uploading the image directory (e.g. Pinata IPFS).
        ///
        ///Make sure to update the Metadata Image Base URI field with the expected value.
        ///
        ///Do you want to continue?.
        /// </summary>
        internal static string CONFIRM_METADATA_UPDATE {
            get {
                return ResourceManager.GetString("CONFIRM_METADATA_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap copy {
            get {
                object obj = ResourceManager.GetObject("copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developed by {0}.
        /// </summary>
        internal static string DEVELOPED_BY {
            get {
                return ResourceManager.GetString("DEVELOPED_BY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to at least one of the images used in the creation of this NFT has a different dimension (width and height) than the others. Please fix this and try again! {0}.
        /// </summary>
        internal static string DIFFERENT_LAYERS_DIMENSION_ERROR {
            get {
                return ResourceManager.GetString("DIFFERENT_LAYERS_DIMENSION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNA {0} already exists!!!.
        /// </summary>
        internal static string DUPLICATED_DNA {
            get {
                return ResourceManager.GetString("DUPLICATED_DNA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of attempts to create a unique image has exceeded the limit. Make sure the size of your Collection is consistent with the number of layers and elements you have. Please, fix this and try again!.
        /// </summary>
        internal static string DUPLICATED_DNA_MAX_ATTEMPT_ERROR {
            get {
                return ResourceManager.GetString("DUPLICATED_DNA_MAX_ATTEMPT_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string ERROR {
            get {
                return ResourceManager.GetString("ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the layer folder name is not valid. It must start with a number, followed by a dash and then the desired name. Please fix this and try again! {0}.
        /// </summary>
        internal static string INVALID_LAYER_NAMING_ERROR {
            get {
                return ResourceManager.GetString("INVALID_LAYER_NAMING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} value is not valid. Please fix this and try again!.
        /// </summary>
        internal static string INVALID_SETTING_ERROR {
            get {
                return ResourceManager.GetString("INVALID_SETTING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata updated successfully!!!.
        /// </summary>
        internal static string METADATA_UPDATED_SUCCESSFULLY {
            get {
                return ResourceManager.GetString("METADATA_UPDATED_SUCCESSFULLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing Collection Item {0} of {1}.
        /// </summary>
        internal static string PROCESSING_COLLECTION_ITEM {
            get {
                return ResourceManager.GetString("PROCESSING_COLLECTION_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error has happened: {0}.
        /// </summary>
        internal static string UNKNOWN_ERROR {
            get {
                return ResourceManager.GetString("UNKNOWN_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} address copied!.
        /// </summary>
        internal static string WALLET_ADDRESS_COPIED {
            get {
                return ResourceManager.GetString("WALLET_ADDRESS_COPIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} wallet for donations.
        /// </summary>
        internal static string WALLET_FOR_DONATION_INFO {
            get {
                return ResourceManager.GetString("WALLET_FOR_DONATION_INFO", resourceCulture);
            }
        }
    }
}
